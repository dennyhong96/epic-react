{"version":3,"sources":["../node_modules/react/jsx-runtime.js","../node_modules/react/cjs/react-jsx-runtime.production.min.js","exercise/04.js"],"names":["module","exports","require","f","g","Fragment","Symbol","h","m","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","n","Object","prototype","hasOwnProperty","p","key","ref","__self","__source","q","c","a","k","b","d","e","l","call","defaultProps","$$typeof","type","props","_owner","current","jsx","jsxs","Board","squares","Array","fill","renderSquare","i","className","onClick","Game","App"],"mappings":";mHAGEA,EAAOC,QAAUC,EAAQ,M,iCCKdA,EAAQ,IAAiB,IAAIC,EAAED,EAAQ,GAASE,EAAE,MAA6B,GAAvBH,EAAQI,SAAS,MAAS,oBAAoBC,QAAQA,OAAM,IAAK,CAAC,IAAIC,EAAED,OAAM,IAAKF,EAAEG,EAAE,iBAAiBN,EAAQI,SAASE,EAAE,kBAAkB,IAAIC,EAAEL,EAAEM,mDAAmDC,kBAAkBC,EAAEC,OAAOC,UAAUC,eAAeC,EAAE,CAACC,KAAI,EAAGC,KAAI,EAAGC,QAAO,EAAGC,UAAS,GACrW,SAASC,EAAEC,EAAEC,EAAEC,GAAG,IAAIC,EAAEC,EAAE,GAAGC,EAAE,KAAKC,EAAE,KAAiF,IAAIH,UAAhF,IAASD,IAAIG,EAAE,GAAGH,QAAG,IAASD,EAAEN,MAAMU,EAAE,GAAGJ,EAAEN,UAAK,IAASM,EAAEL,MAAMU,EAAEL,EAAEL,KAAcK,EAAEX,EAAEiB,KAAKN,EAAEE,KAAKT,EAAED,eAAeU,KAAKC,EAAED,GAAGF,EAAEE,IAAI,GAAGH,GAAGA,EAAEQ,aAAa,IAAIL,KAAKF,EAAED,EAAEQ,kBAAe,IAASJ,EAAED,KAAKC,EAAED,GAAGF,EAAEE,IAAI,MAAM,CAACM,SAAS1B,EAAE2B,KAAKV,EAAEL,IAAIU,EAAET,IAAIU,EAAEK,MAAMP,EAAEQ,OAAOzB,EAAE0B,SAASjC,EAAQkC,IAAIf,EAAEnB,EAAQmC,KAAKhB,G,+DCJvV,SAASiB,IAEP,IAAMC,EAAUC,MAAM,GAAGC,KAAK,MAiC9B,SAASC,EAAaC,GACpB,OACE,wBAAQC,UAAU,SAASC,QAAS,aAApC,SACGN,EAAQI,KAKf,OACE,gCAEE,qBAAKC,UAAU,SAAf,oBACA,sBAAKA,UAAU,YAAf,UACGF,EAAa,GACbA,EAAa,GACbA,EAAa,MAEhB,sBAAKE,UAAU,YAAf,UACGF,EAAa,GACbA,EAAa,GACbA,EAAa,MAEhB,sBAAKE,UAAU,YAAf,UACGF,EAAa,GACbA,EAAa,GACbA,EAAa,MAEhB,wBAAQE,UAAU,UAAUC,QAhChC,aAgCI,wBAON,SAASC,IACP,OACE,qBAAKF,UAAU,OAAf,SACE,qBAAKA,UAAU,aAAf,SACE,cAACN,EAAD,QA6COS,UAJf,WACE,OAAO,cAACD,EAAD","file":"static/js/25.b70604b5.chunk.js","sourcesContent":["'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","/** @license React v17.0.2\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';require(\"object-assign\");var f=require(\"react\"),g=60103;exports.Fragment=60107;if(\"function\"===typeof Symbol&&Symbol.for){var h=Symbol.for;g=h(\"react.element\");exports.Fragment=h(\"react.fragment\")}var m=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,n=Object.prototype.hasOwnProperty,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,k){var b,d={},e=null,l=null;void 0!==k&&(e=\"\"+k);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(l=a.ref);for(b in a)n.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:g,type:c,key:e,ref:l,props:d,_owner:m.current}}exports.jsx=q;exports.jsxs=q;\n","// useState: tic tac toe\n// http://localhost:3000/isolated/exercise/04.js\n\nimport * as React from 'react'\n\nfunction Board() {\n  // üê® squares is the state for this component. Add useState for squares\n  const squares = Array(9).fill(null)\n\n  // üê® We'll need the following bits of derived state:\n  // - nextValue ('X' or 'O')\n  // - winner ('X', 'O', or null)\n  // - status (`Winner: ${winner}`, `Scratch: Cat's game`, or `Next player: ${nextValue}`)\n  // üí∞ I've written the calculations for you! So you can use my utilities\n  // below to create these variables\n\n  // This is the function your square click handler will call. `square` should\n  // be an index. So if they click the center square, this will be `4`.\n  function selectSquare(square) {\n    // üê® first, if there's already winner or there's already a value at the\n    // given square index (like someone clicked a square that's already been\n    // clicked), then return early so we don't make any state changes\n    //\n    // ü¶â It's typically a bad idea to mutate or directly change state in React.\n    // Doing so can lead to subtle bugs that can easily slip into production.\n    //\n    // üê® make a copy of the squares array\n    // üí∞ `[...squares]` will do it!)\n    //\n    // üê® set the value of the square that was selected\n    // üí∞ `squaresCopy[square] = nextValue`\n    //\n    // üê® set the squares to your copy\n  }\n\n  function restart() {\n    // üê® reset the squares\n    // üí∞ `Array(9).fill(null)` will do it!\n  }\n\n  function renderSquare(i) {\n    return (\n      <button className=\"square\" onClick={() => selectSquare(i)}>\n        {squares[i]}\n      </button>\n    )\n  }\n\n  return (\n    <div>\n      {/* üê® put the status in the div below */}\n      <div className=\"status\">STATUS</div>\n      <div className=\"board-row\">\n        {renderSquare(0)}\n        {renderSquare(1)}\n        {renderSquare(2)}\n      </div>\n      <div className=\"board-row\">\n        {renderSquare(3)}\n        {renderSquare(4)}\n        {renderSquare(5)}\n      </div>\n      <div className=\"board-row\">\n        {renderSquare(6)}\n        {renderSquare(7)}\n        {renderSquare(8)}\n      </div>\n      <button className=\"restart\" onClick={restart}>\n        restart\n      </button>\n    </div>\n  )\n}\n\nfunction Game() {\n  return (\n    <div className=\"game\">\n      <div className=\"game-board\">\n        <Board />\n      </div>\n    </div>\n  )\n}\n\n// eslint-disable-next-line no-unused-vars\nfunction calculateStatus(winner, squares, nextValue) {\n  return winner\n    ? `Winner: ${winner}`\n    : squares.every(Boolean)\n    ? `Scratch: Cat's game`\n    : `Next player: ${nextValue}`\n}\n\n// eslint-disable-next-line no-unused-vars\nfunction calculateNextValue(squares) {\n  return squares.filter(Boolean).length % 2 === 0 ? 'X' : 'O'\n}\n\n// eslint-disable-next-line no-unused-vars\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ]\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i]\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a]\n    }\n  }\n  return null\n}\n\nfunction App() {\n  return <Game />\n}\n\nexport default App\n"],"sourceRoot":""}