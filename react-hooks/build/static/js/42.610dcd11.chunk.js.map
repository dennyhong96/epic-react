{"version":3,"sources":["../node_modules/@mdx-js/react/dist/esm.js","exercise/06.md"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","sourceSymbolKeys","prototype","propertyIsEnumerable","call","MDXContext","React","createContext","useMDXComponents","components","contextComponents","useContext","allComponents","DEFAULTS","inlineCode","wrapper","_ref","children","createElement","Fragment","MDXCreateElement","forwardRef","props","ref","propComponents","mdxType","originalType","parentName","etc","type","Component","concat","args","argsLength","createElementArgArray","Array","newProps","hasOwnProperty","displayName","readingTime","layoutProps","MDXContent","isMDXComponent","tableOfContents","id","level","title","frontMatter"],"mappings":"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","file":"static/js/42.610dcd11.chunk.js","sourcesContent":["import React from 'react';\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar isFunction = function isFunction(obj) {\n  return typeof obj === 'function';\n};\n\nvar MDXContext = /*#__PURE__*/React.createContext({});\nvar withMDXComponents = function withMDXComponents(Component) {\n  return function (props) {\n    var allComponents = useMDXComponents(props.components);\n    return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n      components: allComponents\n    }));\n  };\n};\nvar useMDXComponents = function useMDXComponents(components) {\n  var contextComponents = React.useContext(MDXContext);\n  var allComponents = contextComponents;\n\n  if (components) {\n    allComponents = isFunction(components) ? components(contextComponents) : _objectSpread2(_objectSpread2({}, contextComponents), components);\n  }\n\n  return allComponents;\n};\nvar MDXProvider = function MDXProvider(props) {\n  var allComponents = useMDXComponents(props.components);\n  return /*#__PURE__*/React.createElement(MDXContext.Provider, {\n    value: allComponents\n  }, props.children);\n};\n\nvar TYPE_PROP_NAME = 'mdxType';\nvar DEFAULTS = {\n  inlineCode: 'code',\n  wrapper: function wrapper(_ref) {\n    var children = _ref.children;\n    return /*#__PURE__*/React.createElement(React.Fragment, {}, children);\n  }\n};\nvar MDXCreateElement = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var propComponents = props.components,\n      mdxType = props.mdxType,\n      originalType = props.originalType,\n      parentName = props.parentName,\n      etc = _objectWithoutProperties(props, [\"components\", \"mdxType\", \"originalType\", \"parentName\"]);\n\n  var components = useMDXComponents(propComponents);\n  var type = mdxType;\n  var Component = components[\"\".concat(parentName, \".\").concat(type)] || components[type] || DEFAULTS[type] || originalType;\n\n  if (propComponents) {\n    return /*#__PURE__*/React.createElement(Component, _objectSpread2(_objectSpread2({\n      ref: ref\n    }, etc), {}, {\n      components: propComponents\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _objectSpread2({\n    ref: ref\n  }, etc));\n});\nMDXCreateElement.displayName = 'MDXCreateElement';\nfunction createElement (type, props) {\n  var args = arguments;\n  var mdxType = props && props.mdxType;\n\n  if (typeof type === 'string' || mdxType) {\n    var argsLength = args.length;\n    var createElementArgArray = new Array(argsLength);\n    createElementArgArray[0] = MDXCreateElement;\n    var newProps = {};\n\n    for (var key in props) {\n      if (hasOwnProperty.call(props, key)) {\n        newProps[key] = props[key];\n      }\n    }\n\n    newProps.originalType = type;\n    newProps[TYPE_PROP_NAME] = typeof type === 'string' ? type : mdxType;\n    createElementArgArray[1] = newProps;\n\n    for (var i = 2; i < argsLength; i++) {\n      createElementArgArray[i] = args[i];\n    }\n\n    return React.createElement.apply(null, createElementArgArray);\n  }\n\n  return React.createElement.apply(null, args);\n}\n\nexport { MDXContext, MDXProvider, createElement as mdx, useMDXComponents, withMDXComponents };\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"9 min read\",\"minutes\":8.325,\"time\":499500,\"words\":1665}\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"useeffect-http-requests\"\n    }}>{`useEffect: HTTP requests`}</h1>\n    <h2 {...{\n      \"id\": \"-your-notes\"\n    }}>{`📝 Your Notes`}</h2>\n    <p>{`Elaborate on your learnings here in `}<inlineCode parentName=\"p\">{`src/exercise/06.md`}</inlineCode></p>\n    <h2 {...{\n      \"id\": \"background\"\n    }}>{`Background`}</h2>\n    <p>{`HTTP requests are another common side-effect that we need to do in applications.\nThis is no different from the side-effects we need to apply to a rendered DOM or\nwhen interacting with browser APIs like localStorage. In all these cases, we do\nthat within a `}<inlineCode parentName=\"p\">{`useEffect`}</inlineCode>{` hook callback. This hook allows us to ensure that\nwhenever certain changes take place, we apply the side-effects based on those\nchanges.`}</p>\n    <p>{`One important thing to note about the `}<inlineCode parentName=\"p\">{`useEffect`}</inlineCode>{` hook is that you cannot return\nanything other than the cleanup function. This has interesting implications with\nregard to async/await syntax:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\",\n        \"data-language\": \"javascript\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token comment\\\">// this does not work, don't do this:</span>\\nReact<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">useEffect</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">async</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> result <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">await</span> <span class=\\\"token function\\\">doSomeAsyncThing</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token comment\\\">// do something with the result</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n\"\n        }\n      }}></code></pre>\n    <p>{`The reason this doesn’t work is because when you make a function async, it\nautomatically returns a promise (whether you’re not returning anything at all,\nor explicitly returning a function). This is due to the semantics of async/await\nsyntax. So if you want to use async/await, the best way to do that is like so:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\",\n        \"data-language\": \"javascript\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"React<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">useEffect</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">async</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">effect</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> result <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">await</span> <span class=\\\"token function\\\">doSomeAsyncThing</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token comment\\\">// do something with the result</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token function\\\">effect</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n\"\n        }\n      }}></code></pre>\n    <p>{`This ensures that you don’t return anything but a cleanup function.`}</p>\n    <p>{`🦉 I find that it’s typically just easier to extract all the async code into a\nutility function which I call and then use the promise-based `}<inlineCode parentName=\"p\">{`.then`}</inlineCode>{` method\ninstead of using async/await syntax:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\",\n        \"data-language\": \"javascript\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"React<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">useEffect</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">doSomeAsyncThing</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">result</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\">// do something with the result</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n\"\n        }\n      }}></code></pre>\n    <p>{`But how you prefer to do this is totally up to you :)`}</p>\n    <h2 {...{\n      \"id\": \"exercise\"\n    }}>{`Exercise`}</h2>\n    <p>{`Production deploys:`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://react-hooks.netlify.app/isolated/exercise/06.js\"\n        }}>{`Exercise`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://react-hooks.netlify.app/isolated/final/06.js\"\n        }}>{`Final`}</a></li>\n    </ul>\n    <p>{`In this exercise, we’ll be doing data fetching directly in a useEffect hook\ncallback within our component.`}</p>\n    <p>{`Here we have a form where users can enter the name of a pokemon and fetch data\nabout that pokemon. Your job will be to create a component which makes that\nfetch request. When the user submits a pokemon name, our `}<inlineCode parentName=\"p\">{`PokemonInfo`}</inlineCode>{` component\nwill get re-rendered with the `}<inlineCode parentName=\"p\">{`pokemonName`}</inlineCode></p>\n    <h2 {...{\n      \"id\": \"extra-credit\"\n    }}>{`Extra Credit`}</h2>\n    <h3 {...{\n      \"id\": \"1--handle-errors\"\n    }}>{`1. 💯 handle errors`}</h3>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://react-hooks.netlify.app/isolated/final/06.extra-1.js\"\n      }}>{`Production deploy`}</a></p>\n    <p>{`Unfortunately, sometimes things go wrong and we need to handle errors when they\ndo so we can show the user useful information. Handle that error and render it\nout like so:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"data-language\": \"jsx\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span> <span class=\\\"token attr-name\\\">role</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation attr-equals\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>alert<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n  There was an error: </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>pre</span> <span class=\\\"token attr-name\\\">style</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">{</span>whiteSpace<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'normal'</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token punctuation\\\">{</span>error<span class=\\\"token punctuation\\\">.</span>message<span class=\\\"token punctuation\\\">}</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>pre</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n\"\n        }\n      }}></code></pre>\n    <p>{`You can make an error happen by typing an incorrect pokemon name into the input.`}</p>\n    <p>{`One common question I get about this extra credit is how to handle promise\nerrors. There are two ways to do it in this extra credit:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\",\n        \"data-language\": \"javascript\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token comment\\\">// option 1: using .catch</span>\\n<span class=\\\"token function\\\">fetchPokemon</span><span class=\\\"token punctuation\\\">(</span>pokemonName<span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">pokemon</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token function\\\">setPokemon</span><span class=\\\"token punctuation\\\">(</span>pokemon<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">catch</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">error</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token function\\\">setError</span><span class=\\\"token punctuation\\\">(</span>error<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n\\n<span class=\\\"token comment\\\">// option 2: using the second argument to .then</span>\\n<span class=\\\"token function\\\">fetchPokemon</span><span class=\\\"token punctuation\\\">(</span>pokemonName<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token parameter\\\">pokemon</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token function\\\">setPokemon</span><span class=\\\"token punctuation\\\">(</span>pokemon<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token parameter\\\">error</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token function\\\">setError</span><span class=\\\"token punctuation\\\">(</span>error<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">)</span>\\n\"\n        }\n      }}></code></pre>\n    <p>{`These are functionally equivalent for our purposes, but they are semantically\ndifferent in general.`}</p>\n    <p>{`Using `}<inlineCode parentName=\"p\">{`.catch`}</inlineCode>{` means that you’ll handle an error in the `}<inlineCode parentName=\"p\">{`fetchPokemon`}</inlineCode>{` promise,\nbut you’ll `}<em parentName=\"p\">{`also`}</em>{` handle an error in the `}<inlineCode parentName=\"p\">{`setPokemon(pokemon)`}</inlineCode>{` call as well.\nThis is due to the semantics of how promises work.`}</p>\n    <p>{`Using the second argument to `}<inlineCode parentName=\"p\">{`.then`}</inlineCode>{` means that you will catch an error that\nhappens in `}<inlineCode parentName=\"p\">{`fetchPokemon`}</inlineCode>{` only. In this case, I knew that calling `}<inlineCode parentName=\"p\">{`setPokemon`}</inlineCode>{`\nwould not throw an error (React handles errors and we have an API to catch those\nwhich we’ll use later), so I decided to go with the second argument option.`}</p>\n    <p>{`However, in this situation, it doesn’t really make much of a difference. If you\nwant to go with the safe option, then opt for `}<inlineCode parentName=\"p\">{`.catch`}</inlineCode>{`.`}</p>\n    <h3 {...{\n      \"id\": \"2--use-a-status\"\n    }}>{`2. 💯 use a status`}</h3>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://react-hooks.netlify.app/isolated/final/06.extra-2.js\"\n      }}>{`Production deploy`}</a></p>\n    <p>{`Our logic for what to show the user when is kind of convoluted and requires that\nwe be really careful about which state we set and when.`}</p>\n    <p>{`We could make things much simpler by having some state to set the explicit\nstatus of our component. Our component can be in the following \"states\":`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`idle`}</inlineCode>{`: no request made yet`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`pending`}</inlineCode>{`: request started`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`resolved`}</inlineCode>{`: request successful`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`rejected`}</inlineCode>{`: request failed`}</li>\n    </ul>\n    <p>{`Try to use a status state by setting it to these string values rather than\nrelying on existing state or booleans.`}</p>\n    <p>{`Learn more about this concept here:\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://kentcdodds.com/blog/stop-using-isloading-booleans\"\n      }}>{`https://kentcdodds.com/blog/stop-using-isloading-booleans`}</a></p>\n    <p>{`💰 Warning: Make sure you call `}<inlineCode parentName=\"p\">{`setPokemon`}</inlineCode>{` before calling `}<inlineCode parentName=\"p\">{`setStatus`}</inlineCode>{`. We’ll\naddress that more in the next extra credit.`}</p>\n    <h3 {...{\n      \"id\": \"3--store-the-state-in-an-object\"\n    }}>{`3. 💯 store the state in an object`}</h3>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://react-hooks.netlify.app/isolated/final/06.extra-3.js\"\n      }}>{`Production deploy`}</a></p>\n    <p>{`You’ll notice that we’re calling a bunch of state updaters in a row. This is\nnormally not a problem, but each call to our state updater can result in a\nre-render of our component. React normally batches these calls so you only get a\nsingle re-render, but it’s unable to do this in an asynchronous callback (like\nour promise success and error handlers).`}</p>\n    <p>{`So you might notice that if you do this:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\",\n        \"data-language\": \"javascript\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token function\\\">setStatus</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'resolved'</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token function\\\">setPokemon</span><span class=\\\"token punctuation\\\">(</span>pokemon<span class=\\\"token punctuation\\\">)</span>\\n\"\n        }\n      }}></code></pre>\n    <p>{`You’ll get an error indicating that you cannot read `}<inlineCode parentName=\"p\">{`image`}</inlineCode>{` of `}<inlineCode parentName=\"p\">{`null`}</inlineCode>{`. This is\nbecause the `}<inlineCode parentName=\"p\">{`setStatus`}</inlineCode>{` call results in a re-render that happens before the\n`}<inlineCode parentName=\"p\">{`setPokemon`}</inlineCode>{` happens.`}</p>\n    <p>{`In the future, you’ll learn about how `}<inlineCode parentName=\"p\">{`useReducer`}</inlineCode>{` can solve this problem really\nelegantly, but we can still accomplish this by storing our state as an object\nthat has all the properties of state we’re managing.`}</p>\n    <p>{`See if you can figure out how to store all of your state in a single object with\na single `}<inlineCode parentName=\"p\">{`React.useState`}</inlineCode>{` call so I can update my state like this:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\",\n        \"data-language\": \"javascript\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>status<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'resolved'</span><span class=\\\"token punctuation\\\">,</span> pokemon<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n\"\n        }\n      }}></code></pre>\n    <h3 {...{\n      \"id\": \"4--create-an-errorboundary-component\"\n    }}>{`4. 💯 create an ErrorBoundary component`}</h3>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://react-hooks.netlify.app/isolated/final/06.extra-4.js\"\n      }}>{`Production deploy`}</a></p>\n    <p>{`We’ve already solved the problem for errors in our request, we’re only handling\nthat one error. But there are a lot of different kinds of errors that can happen\nin our applications.`}</p>\n    <p>{`No matter how hard you try, eventually your app code just isn’t going to behave\nthe way you expect it to and you’ll need to handle those exceptions. If an error\nis thrown and unhandled, your application will be removed from the page, leaving\nthe user with a blank screen… Kind of awkward…`}</p>\n    <p>{`Luckily for us, there’s a simple way to handle errors in your application using\na special kind of component called an\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://reactjs.org/docs/error-boundaries.html\"\n      }}>{`Error Boundary`}</a>{`. Unfortunately,\nthere is currently no way to create an Error Boundary component with a function\nand you have to use a class component instead.`}</p>\n    <p>{`In this extra credit, read up on ErrorBoundary components, and try to create one\nthat handles this and any other error for the `}<inlineCode parentName=\"p\">{`PokemonInfo`}</inlineCode>{` component.`}</p>\n    <p>{`💰 to make your error boundary component handle errors from the `}<inlineCode parentName=\"p\">{`PokemonInfo`}</inlineCode>{`\ncomponent, instead of rendering the error within the `}<inlineCode parentName=\"p\">{`PokemonInfo`}</inlineCode>{` component,\nyou’ll need to `}<inlineCode parentName=\"p\">{`throw error`}</inlineCode>{` right in the function so React can hand that to the\nerror boundary. So `}<inlineCode parentName=\"p\">{`if (status === 'rejected') throw error`}</inlineCode>{`.`}</p>\n    <h3 {...{\n      \"id\": \"5--re-mount-the-error-boundary\"\n    }}>{`5. 💯 re-mount the error boundary`}</h3>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://react-hooks.netlify.app/isolated/final/06.extra-5.js\"\n      }}>{`Production deploy`}</a></p>\n    <p>{`You might notice that with the changes we’ve added, we now cannot recover from\nan error. For example:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Type an incorrect pokemon`}</li>\n      <li parentName=\"ol\">{`Notice the error`}</li>\n      <li parentName=\"ol\">{`Type a correct pokemon`}</li>\n      <li parentName=\"ol\">{`Notice it doesn’t show that new pokemon’s information`}</li>\n    </ol>\n    <p>{`The reason this is happening is because the `}<inlineCode parentName=\"p\">{`error`}</inlineCode>{` that’s stored in the\ninternal state of the `}<inlineCode parentName=\"p\">{`ErrorBoundary`}</inlineCode>{` component isn’t getting reset, so it’s not\nrendering the `}<inlineCode parentName=\"p\">{`children`}</inlineCode>{` we’re passing to it.`}</p>\n    <p>{`So what we need to do is reset the ErrorBoundary’s `}<inlineCode parentName=\"p\">{`error`}</inlineCode>{` state to `}<inlineCode parentName=\"p\">{`null`}</inlineCode>{` so it\nwill re-render. But how do we access the internal state of our `}<inlineCode parentName=\"p\">{`ErrorBoundary`}</inlineCode>{`\nto reset it? Well, there are a few ways we could do this by modifying the\n`}<inlineCode parentName=\"p\">{`ErrorBoundary`}</inlineCode>{`, but one thing you can do when you want to `}<em parentName=\"p\">{`reset`}</em>{` the state of\na component, is by providing it a `}<inlineCode parentName=\"p\">{`key`}</inlineCode>{` prop which can be used to unmount and\nre-mount a component.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`key`}</inlineCode>{` you can use? Try the `}<inlineCode parentName=\"p\">{`pokemonName`}</inlineCode>{`!`}</p>\n    <h3 {...{\n      \"id\": \"6--use-react-error-boundary\"\n    }}>{`6. 💯 use react-error-boundary`}</h3>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://react-hooks.netlify.app/isolated/final/06.extra-6.js\"\n      }}>{`Production deploy`}</a></p>\n    <p>{`As cool as our own `}<inlineCode parentName=\"p\">{`ErrorBoundary`}</inlineCode>{` is, I’d rather not have to maintain it in the\nlong-term. Luckily for us, there’s an npm package we can use instead and it’s\nalready installed into this project. It’s called\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/bvaughn/react-error-boundary\"\n      }}><inlineCode parentName=\"a\">{`react-error-boundary`}</inlineCode></a>{`.`}</p>\n    <p>{`Go ahead and give that a look and swap out our own `}<inlineCode parentName=\"p\">{`ErrorBoundary`}</inlineCode>{` for the one\nfrom `}<inlineCode parentName=\"p\">{`react-error-boundary`}</inlineCode>{`.`}</p>\n    <h3 {...{\n      \"id\": \"7--reset-the-error-boundary\"\n    }}>{`7. 💯 reset the error boundary`}</h3>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://react-hooks.netlify.app/isolated/final/06.extra-7.js\"\n      }}>{`Production deploy`}</a></p>\n    <p>{`You may have noticed a problem with the way we’re resetting the internal state\nof the `}<inlineCode parentName=\"p\">{`ErrorBoundary`}</inlineCode>{` using the `}<inlineCode parentName=\"p\">{`key`}</inlineCode>{`. Unfortunately, we’re not only\nre-mounting the `}<inlineCode parentName=\"p\">{`ErrorBoundary`}</inlineCode>{`, we’re also re-mounting the `}<inlineCode parentName=\"p\">{`PokemonInfo`}</inlineCode>{` which\nresults in a flash of the initial “Submit a pokemon” state whenever we change\nour pokemon.`}</p>\n    <p>{`So let’s backtrack on that and instead we’ll use `}<inlineCode parentName=\"p\">{`react-error-boundary`}</inlineCode>{`'s\n`}<inlineCode parentName=\"p\">{`resetErrorBoundary`}</inlineCode>{` function (which will be passed to our `}<inlineCode parentName=\"p\">{`ErrorFallback`}</inlineCode>{`\ncomponent) to reset the state of the `}<inlineCode parentName=\"p\">{`ErrorBoundary`}</inlineCode>{` when the user clicks a \"try\nagain\" button.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`💰 feel free to open up the finished version by clicking the link in the app\nso you can get an idea of how this is supposed to work.`}</p>\n    </blockquote>\n    <p>{`Once you have this button wired up, we need to react to this reset of the\n`}<inlineCode parentName=\"p\">{`ErrorBoundary`}</inlineCode>{`'s state by resetting our own state so we don’t wind up\ntriggering the error again. To do this we can use the `}<inlineCode parentName=\"p\">{`onReset`}</inlineCode>{` prop of the\n`}<inlineCode parentName=\"p\">{`ErrorBoundary`}</inlineCode>{`. In that function we can simply `}<inlineCode parentName=\"p\">{`setPokemonName`}</inlineCode>{` to an empty\nstring.`}</p>\n    <h3 {...{\n      \"id\": \"8--use-resetkeys\"\n    }}>{`8. 💯 use resetKeys`}</h3>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://react-hooks.netlify.app/isolated/final/06.extra-8.js\"\n      }}>{`Production deploy`}</a></p>\n    <p>{`Unfortunately now the user can’t simply select a new pokemon and continue with\ntheir day. They have to first click “Try again” and then select their new\npokemon. I think it would be cooler if they can just submit a new `}<inlineCode parentName=\"p\">{`pokemonName`}</inlineCode>{`\nand the `}<inlineCode parentName=\"p\">{`ErrorBoundary`}</inlineCode>{` would reset itself automatically.`}</p>\n    <p>{`Luckily for us `}<inlineCode parentName=\"p\">{`react-error-boundary`}</inlineCode>{` supports this with the `}<inlineCode parentName=\"p\">{`resetKeys`}</inlineCode>{` prop.\nYou pass an array of values to `}<inlineCode parentName=\"p\">{`resetKeys`}</inlineCode>{` and if the `}<inlineCode parentName=\"p\">{`ErrorBoundary`}</inlineCode>{` is in an\nerror state and any of those values change, it will reset the error boundary.`}</p>\n    <p>{`💰 Your `}<inlineCode parentName=\"p\">{`resetKeys`}</inlineCode>{` prop should be: `}<inlineCode parentName=\"p\">{`[pokemonName]`}</inlineCode></p>\n    <h2 {...{\n      \"id\": \"-feedback\"\n    }}>{`🦉 Feedback`}</h2>\n    <p>{`Fill out\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://ws.kcd.im/?ws=React%20Hooks%20%F0%9F%8E%A3&e=06%3A%20useEffect%3A%20HTTP%20requests&em=\"\n      }}>{`the feedback form`}</a>{`.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"-your-notes\",\n    level: 2,\n    title: \"📝 Your Notes\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"background\",\n    level: 2,\n    title: \"Background\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"exercise\",\n    level: 2,\n    title: \"Exercise\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"extra-credit\",\n    level: 2,\n    title: \"Extra Credit\",\n    children: [\n        {\n              id: \"1--handle-errors\",\n              level: 3,\n              title: \"1. 💯 handle errors\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"2--use-a-status\",\n              level: 3,\n              title: \"2. 💯 use a status\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"3--store-the-state-in-an-object\",\n              level: 3,\n              title: \"3. 💯 store the state in an object\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"4--create-an-errorboundary-component\",\n              level: 3,\n              title: \"4. 💯 create an ErrorBoundary component\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"5--re-mount-the-error-boundary\",\n              level: 3,\n              title: \"5. 💯 re-mount the error boundary\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"6--use-react-error-boundary\",\n              level: 3,\n              title: \"6. 💯 use react-error-boundary\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"7--reset-the-error-boundary\",\n              level: 3,\n              title: \"7. 💯 reset the error boundary\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"8--use-resetkeys\",\n              level: 3,\n              title: \"8. 💯 use resetKeys\",\n              children: [\n                      \n                    ]\n            }\n      ]\n  },\n{\n    id: \"-feedback\",\n    level: 2,\n    title: \"🦉 Feedback\",\n    children: [\n        \n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n"],"sourceRoot":""}